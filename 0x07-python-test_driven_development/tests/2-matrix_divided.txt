The ``2-matrix_divided.py`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Checking for module docstring:
	>>> m = __import__('2-matrix_divided').__doc__
	>>> len(m) > l
	True

checking for function docstring:	
	>>> f = __import__('2-matrix_divided').matrix_divided.__doc__
	>>> len(f) > l
	True

checking for passing None as matrix:
	>>> matrix_divided(None, 1)
	Traceback (most recent call last):
	...
	TypeError:matrix must be a matrix (list of lists)of integers/floats

checking for passing None as div:
	>>> matrix = [[1,2,3], [4,5,6]]
	>>> matrix_divided(matrix,None)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

checking for matrix as list:
	>>> matrix = 'Hello'
	>>> matrix_divided(matrix,1)
	Traceback (most recent call last):
	...
	TypeError:matrix must be a matrix(list of lists0 of integers or floats

checking for list of mixed list and non-list items:
	>>> matrix = [[1,2,3], ['Hello']]
	>>> matrix_divided(matrix,1)
	Traceback (most recent call last):
	...
	TypeError:matrix must be a matrix(list of lists) of integers or floats

checking for uneven matrix:
	>>> matrix = [[1, 2, 3], [4, 5, 6, 7, 8]]
	>>> matrix_divided(matrix,2)
	Traceback (most recent call last):
	...
	TypeError:each row of the matrix must have the same size

checking for mix of ints ,floats and non-number type:
	>>> matrix = [[1, 'H', 3], [4, 4.6, 7]]
	>>> matrix_divided(matrix,4)
	Traceback (most recent call last):
	...
	TypeError:matrix must be a matrix(list of lists) of integers or floats

checking for mix of ints,floats and bool:
	>>> matrix = [[1, 1.2, True], [False, 3, 4]
	>>> matrix_divided(matrix,5)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix(list of lists) of integers or floats

checking for mix of ints,floats and tuple:
	>>> matrix =[[1, (1,), 3], [4, 6, 7.7]]
	>>> matrix_divided(matrix,3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix(list of lists) of integers or floats

checking for div as non-number:
	>>> matrix = [[1, 2, 3], [3, 4, 5]]
	>>> matrix_divided(matrix,'A')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

checking for div as a bool:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix,True)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

checking for div as 0:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix,0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

checking for regular division:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix,2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
	>>> matrix
	[[1, 2, 3], [4, 5, 6]]

checking for mix of ints and floats:
	>>> matrix =[[1.2, 2, 5], [4.2, 3, 6]]
	>>> matrix_divided(matrix,3)
	[[0.4, 0.67, 1.67], [1.4, 1.0, 2.0]]
	>>> matrix
	[[1.2, 2, 5], [4.2, 3, 6]]

checking for div as float:
	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix,2.1)
	[[0.48, 0.95, 1.43], [1.9, 2.38, 2.86]]
	>>> matrix
	[[1, 2, 3], [4, 5, 6]]






